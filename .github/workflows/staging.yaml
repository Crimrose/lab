name: Deploy staging

on:
  release:
    types: [prereleased]

jobs:
  deploy:
    name: Deploy to Remote Server for Prerelease
    runs-on: ubuntu-latest

    steps:
      - name: Get Release Tag
        # This step extracts the release tag (e.g. v1.2.3-rc) from the GitHub event payload
        id: get_tag
        run: |
          # GITHUB_REF may look like refs/tags/v1.2.3-rc
          # We can parse just the last part as the tag name
          TAG_NAME="${GITHUB_REF##*/}"
          echo $TAG_NAME
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT

      # - name: SSH to Remote VM and Deploy
      #   uses: appleboy/ssh-action@v0.1.17
      #   with:
      #     host: ${{ secrets.REMOTE_HOST }}             # e.g. '123.45.67.89'
      #     username: ${{ secrets.REMOTE_USER }}         # e.g. 'ubuntu'
      #     key: ${{ secrets.REMOTE_SSH_KEY }}           # Your private key stored in GitHub Secrets
      #     port: 22                                     # Adjust if needed
      #     script: |
      #       echo "Deploying prerelease: ${{ steps.get_tag.outputs.tag_name }}"
            
      #       # 1) Go to your project directory
      #       cd /path/to/your/project

      #       # 2) Fetch latest code (optional if you already have a repo cloned)
      #       git fetch --all

      #       # 3) Check out the branch or tag that matches the prerelease
      #       #    If you use a special naming convention, adjust accordingly.
      #       git checkout ${{ steps.get_tag.outputs.tag_name }}

      #       # 4) Pull the latest changes
      #       git pull origin ${{ steps.get_tag.outputs.tag_name }} || true

      #       # 5) Build and start containers in detached mode
      #       docker compose build --no-cache
      #       docker compose up -d

      #       # 6) Validate containers are running
      #       docker compose ps

            # # Optional: add any health checks or tests
            # # e.g., docker compose exec web curl --fail http://localhost || exit 1

            # echo "Prerelease deployment completed successfully!"
