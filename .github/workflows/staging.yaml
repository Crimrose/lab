name: Deploy staging

on:
  # release:
  #   types: [prereleased]
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to Remote Server for Prerelease
    runs-on: ubuntu-latest

    steps:
      - name: Get Release Tag
        # This step extracts the release tag (e.g. v1.2.3-rc) from the GitHub event payload
        id: get_tag
        run: |
          # GITHUB_REF may look like refs/tags/v1.2.3
          TAG_NAME="${GITHUB_REF##*/}"
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: SSH to Remote VM and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}             # e.g. '123.45.67.89'
          username: ${{ secrets.REMOTE_USER }}         # e.g. 'ubuntu'
          key: ${{ secrets.SSH_PRIVATE_KEY }}           # Your private key stored in GitHub Secrets
          # password: ${{ secrets.REMOTE_PASSWORD }}
          port: 22                                     # Adjust if needed
          script: |
            FOLDER_NAME="lab"
            echo "Deploying prerelease: ${{ steps.get_tag.outputs.tag_name }}"
            
            mkdir -p /tmp/redex

            cd /tmp/redex

            # Check if folder exists
            if [ -d "$FOLDER_NAME" ]; then
              echo "Folder '$FOLDER_NAME' already exists."
              echo "Navigating to '$FOLDER_NAME'..."
              cd "$FOLDER_NAME"
            else
              echo "Folder '$FOLDER_NAME' does NOT exist."
              echo "Cloning repository:"
              git clone https://github.com/Crimrose/lab.git "$FOLDER_NAME"
              echo "Navigating to '$FOLDER_NAME'..."
              cd "$FOLDER_NAME"
            fi            
            git fetch --all
            git checkout ${{ steps.get_tag.outputs.tag_name }}
            git pull origin ${{ steps.get_tag.outputs.tag_name }} || true
            docker-compose build
            docker-compose up -d --force-recreate
            docker-compose ps
            echo "Prerelease deployment completed successfully!"
